/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package com.mycompany.myfarm.frontend.dialogs.partida.parcela;

import com.mycompany.myfarm.backend.MotorJuego;
import com.mycompany.myfarm.backend.animal.Animal;
import com.mycompany.myfarm.backend.animal.AnimalHervivoro;
import com.mycompany.myfarm.backend.animal.AnimalOmnivoro;
import com.mycompany.myfarm.backend.granja.Granja;
import com.mycompany.myfarm.backend.granja.Parcela;
import com.mycompany.myfarm.backend.mercado.Mercado;
import com.mycompany.myfarm.backend.producto.Alimento;
import com.mycompany.myfarm.frontend.dialogs.AccionExitosaDialog;
import com.mycompany.myfarm.frontend.dialogs.partida.MercadoDialog;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ronaldo
 */
public class AlimentarAnimalesDialog extends javax.swing.JDialog {
    private Parcela parcela;
    private Granja granja;
    /**
     * Creates new form AlimentarAnimalesDialog
     */
    public AlimentarAnimalesDialog(Parcela parcela,Granja granja) {
        initComponents();
        setLocationRelativeTo(null);
        this.parcela=parcela;
        this.granja=granja;
        cargarAnimalesATablaYCmb();
        cargarAlimentosDisponibles();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelPrincipal = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaAnimales = new javax.swing.JTable();
        cmbListaAnimales = new javax.swing.JComboBox<>();
        btnSiguiente = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        cmbCantidadAlimentos = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cmbALimentosDisponibles = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        btnMercado = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setModal(true);

        panelPrincipal.setBackground(new java.awt.Color(204, 204, 204));

        jLabel1.setBackground(new java.awt.Color(153, 0, 0));
        jLabel1.setFont(new java.awt.Font("Ubuntu Mono", 1, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Alimento-Animales");
        jLabel1.setOpaque(true);

        tablaAnimales.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No.", "Nombre", "Alimentos Disponibles"
            }
        ));
        jScrollPane1.setViewportView(tablaAnimales);

        cmbListaAnimales.setFont(new java.awt.Font("Ubuntu Mono", 1, 24)); // NOI18N

        btnSiguiente.setText("Alimentar");
        btnSiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSiguienteActionPerformed(evt);
            }
        });

        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Selecciona el numero de animal, la cantidad de alimento");

        cmbCantidadAlimentos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5" }));

        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Indice de animal");

        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("CantidadDeAlimentos");

        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Selecciona el alimento");

        btnMercado.setText("Ir al mercado");
        btnMercado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMercadoActionPerformed(evt);
            }
        });

        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelPrincipalLayout = new javax.swing.GroupLayout(panelPrincipal);
        panelPrincipal.setLayout(panelPrincipalLayout);
        panelPrincipalLayout.setHorizontalGroup(
            panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPrincipalLayout.createSequentialGroup()
                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPrincipalLayout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 652, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(panelPrincipalLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cmbALimentosDisponibles, 0, 176, Short.MAX_VALUE)
                            .addComponent(cmbCantidadAlimentos, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbListaAnimales, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(51, 51, 51)
                        .addComponent(btnSiguiente, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 86, Short.MAX_VALUE)))
                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnMercado, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12))
        );
        panelPrincipalLayout.setVerticalGroup(
            panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPrincipalLayout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnMercado, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelPrincipalLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbListaAnimales, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbALimentosDisponibles, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbCantidadAlimentos, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSiguiente, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)))
                    .addComponent(btnSalir, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 51, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSiguienteActionPerformed
        String nombreAlimento = (String) cmbALimentosDisponibles.getSelectedItem();
        int cantidad = cmbCantidadAlimentos.getSelectedIndex() + 1;
        int indiceAnimal = cmbListaAnimales.getSelectedIndex();
        if (parcela.hayComidaEnBodaga(granja.getBodega().getAlimentosParaAnimales(), nombreAlimento, cantidad)) {
            Animal animal = parcela.getAnimales().obtenerContenido(indiceAnimal);
            Alimento alimento = MotorJuego.getAlmacenador().getMercadoGeneral().getAlimentosParaAnimales()[cmbALimentosDisponibles.getSelectedIndex()];
            int totalAlimento = animal.getAlimentosAcumulados().getUltimaPosicion() + cantidad;
            if (totalAlimento <= 4) {
                parcela.darleDeComerAnimal(animal, alimento, cantidad);
                granja.getBodega().sacarAlimentosDeBodega(alimento, cantidad);
                cargarAnimalesATablaYCmb();
                System.out.println(granja.getBodega().getAlimentosParaAnimales().getTamaño());;
                AccionExitosaDialog dialog = new AccionExitosaDialog("Animal alimentado con exito");
                dialog.setVisible(true);

            } else {
                JOptionPane.showMessageDialog(this, "Solo puedes agregar 5 alimentos por animal, reduce la cantidad", "Exceso de comida", JOptionPane.ERROR_MESSAGE);
            }

        } else {
            JOptionPane.showMessageDialog(this, "No cuentas con la comida necesaria ve al mercado", "Falta alimento", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSiguienteActionPerformed

    private void btnMercadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMercadoActionPerformed
        Mercado mercado =MotorJuego.getAlmacenador().getMercadoGeneral();
        MercadoDialog mercadoDialog = new MercadoDialog(mercado, granja.getGranjero());
        mercadoDialog.setVisible(true);
    }//GEN-LAST:event_btnMercadoActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void cargarAnimalesATablaYCmb() {
        DefaultTableModel modelo = (DefaultTableModel) tablaAnimales.getModel();
        int filas = modelo.getRowCount();
        for (int i = filas - 1; i >= 0; i--) {
            modelo.removeRow(i);
        }
        cmbListaAnimales.removeAllItems();
        for (int i = 0; i < parcela.getAnimales().getTamaño(); i++) {
            Animal animal = parcela.getAnimales().obtenerContenido(i);
            if (animal.isEstaVivo()) {
                modelo.addRow(new Object[]{i + 1, animal.getNombre(), animal.getAlimentosAcumulados().getUltimaPosicion() + 1});
                cmbListaAnimales.addItem("" + (i + 1));
            }

        }

    }
    private void cargarAlimentosDisponibles() {
        Animal animal = parcela.getAnimales().obtenerContenido(0);
        Alimento[] alimentos = MotorJuego.getAlmacenador().getMercadoGeneral().getAlimentosParaAnimales();
        for (int i = 0; i < alimentos.length; i++) {
            if (animal instanceof AnimalHervivoro) {
                if (alimentos[i].isParaHervivoros()) {
                    cmbALimentosDisponibles.addItem("" + alimentos[i].getNombre());
                }
            } else if (animal instanceof AnimalOmnivoro) {
                if (!alimentos[i].isParaHervivoros()) {
                    cmbALimentosDisponibles.addItem("" + alimentos[i].getNombre());
                }
            }

        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnMercado;
    private javax.swing.JButton btnSalir;
    private javax.swing.JButton btnSiguiente;
    private javax.swing.JComboBox<String> cmbALimentosDisponibles;
    private javax.swing.JComboBox<String> cmbCantidadAlimentos;
    private javax.swing.JComboBox<String> cmbListaAnimales;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panelPrincipal;
    private javax.swing.JTable tablaAnimales;
    // End of variables declaration//GEN-END:variables
}
